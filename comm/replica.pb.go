// Code generated by protoc-gen-go. DO NOT EDIT.
// source: replica.proto

/*
Package comm is a generated protocol buffer package.

It is generated from these files:
	replica.proto

It has these top-level messages:
	Msg
*/
package comm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Msg struct {
	Replica   string            `protobuf:"bytes,1,opt,name=replica" json:"replica,omitempty"`
	Vclock    map[string]uint32 `protobuf:"bytes,2,rep,name=vclock" json:"vclock,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Operation string            `protobuf:"bytes,3,opt,name=operation" json:"operation,omitempty"`
	Create    *Msg_CREATE       `protobuf:"bytes,4,opt,name=create" json:"create,omitempty"`
	Delete    *Msg_DELETE       `protobuf:"bytes,5,opt,name=delete" json:"delete,omitempty"`
	Rename    *Msg_RENAME       `protobuf:"bytes,6,opt,name=rename" json:"rename,omitempty"`
	Append    *Msg_APPEND       `protobuf:"bytes,7,opt,name=append" json:"append,omitempty"`
	Expunge   *Msg_EXPUNGE      `protobuf:"bytes,8,opt,name=expunge" json:"expunge,omitempty"`
	Store     *Msg_STORE        `protobuf:"bytes,9,opt,name=store" json:"store,omitempty"`
	Copy      *Msg_COPY         `protobuf:"bytes,10,opt,name=copy" json:"copy,omitempty"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Msg) GetReplica() string {
	if m != nil {
		return m.Replica
	}
	return ""
}

func (m *Msg) GetVclock() map[string]uint32 {
	if m != nil {
		return m.Vclock
	}
	return nil
}

func (m *Msg) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *Msg) GetCreate() *Msg_CREATE {
	if m != nil {
		return m.Create
	}
	return nil
}

func (m *Msg) GetDelete() *Msg_DELETE {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *Msg) GetRename() *Msg_RENAME {
	if m != nil {
		return m.Rename
	}
	return nil
}

func (m *Msg) GetAppend() *Msg_APPEND {
	if m != nil {
		return m.Append
	}
	return nil
}

func (m *Msg) GetExpunge() *Msg_EXPUNGE {
	if m != nil {
		return m.Expunge
	}
	return nil
}

func (m *Msg) GetStore() *Msg_STORE {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *Msg) GetCopy() *Msg_COPY {
	if m != nil {
		return m.Copy
	}
	return nil
}

type Msg_Element struct {
	Value    string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Tag      string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Contents string `protobuf:"bytes,3,opt,name=contents" json:"contents,omitempty"`
}

func (m *Msg_Element) Reset()                    { *m = Msg_Element{} }
func (m *Msg_Element) String() string            { return proto.CompactTextString(m) }
func (*Msg_Element) ProtoMessage()               {}
func (*Msg_Element) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Msg_Element) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Msg_Element) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Msg_Element) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type Msg_CREATE struct {
	User       string       `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox    string       `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	AddMailbox *Msg_Element `protobuf:"bytes,3,opt,name=addMailbox" json:"addMailbox,omitempty"`
}

func (m *Msg_CREATE) Reset()                    { *m = Msg_CREATE{} }
func (m *Msg_CREATE) String() string            { return proto.CompactTextString(m) }
func (*Msg_CREATE) ProtoMessage()               {}
func (*Msg_CREATE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Msg_CREATE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_CREATE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_CREATE) GetAddMailbox() *Msg_Element {
	if m != nil {
		return m.AddMailbox
	}
	return nil
}

type Msg_DELETE struct {
	User       string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox    string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMailbox []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMailbox" json:"rmvMailbox,omitempty"`
}

func (m *Msg_DELETE) Reset()                    { *m = Msg_DELETE{} }
func (m *Msg_DELETE) String() string            { return proto.CompactTextString(m) }
func (*Msg_DELETE) ProtoMessage()               {}
func (*Msg_DELETE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Msg_DELETE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_DELETE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_DELETE) GetRmvMailbox() []*Msg_Element {
	if m != nil {
		return m.RmvMailbox
	}
	return nil
}

type Msg_RENAME struct {
	User       string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox    string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMailbox []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMailbox" json:"rmvMailbox,omitempty"`
	AddMailbox *Msg_Element   `protobuf:"bytes,4,opt,name=addMailbox" json:"addMailbox,omitempty"`
	AddMails   []*Msg_Element `protobuf:"bytes,5,rep,name=addMails" json:"addMails,omitempty"`
}

func (m *Msg_RENAME) Reset()                    { *m = Msg_RENAME{} }
func (m *Msg_RENAME) String() string            { return proto.CompactTextString(m) }
func (*Msg_RENAME) ProtoMessage()               {}
func (*Msg_RENAME) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *Msg_RENAME) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_RENAME) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_RENAME) GetRmvMailbox() []*Msg_Element {
	if m != nil {
		return m.RmvMailbox
	}
	return nil
}

func (m *Msg_RENAME) GetAddMailbox() *Msg_Element {
	if m != nil {
		return m.AddMailbox
	}
	return nil
}

func (m *Msg_RENAME) GetAddMails() []*Msg_Element {
	if m != nil {
		return m.AddMails
	}
	return nil
}

type Msg_APPEND struct {
	User    string       `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox string       `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	AddMail *Msg_Element `protobuf:"bytes,3,opt,name=addMail" json:"addMail,omitempty"`
}

func (m *Msg_APPEND) Reset()                    { *m = Msg_APPEND{} }
func (m *Msg_APPEND) String() string            { return proto.CompactTextString(m) }
func (*Msg_APPEND) ProtoMessage()               {}
func (*Msg_APPEND) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *Msg_APPEND) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_APPEND) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_APPEND) GetAddMail() *Msg_Element {
	if m != nil {
		return m.AddMail
	}
	return nil
}

type Msg_EXPUNGE struct {
	User    string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMail []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMail" json:"rmvMail,omitempty"`
}

func (m *Msg_EXPUNGE) Reset()                    { *m = Msg_EXPUNGE{} }
func (m *Msg_EXPUNGE) String() string            { return proto.CompactTextString(m) }
func (*Msg_EXPUNGE) ProtoMessage()               {}
func (*Msg_EXPUNGE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

func (m *Msg_EXPUNGE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_EXPUNGE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_EXPUNGE) GetRmvMail() []*Msg_Element {
	if m != nil {
		return m.RmvMail
	}
	return nil
}

type Msg_STORE struct {
	User    string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMail []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMail" json:"rmvMail,omitempty"`
	AddMail *Msg_Element   `protobuf:"bytes,4,opt,name=addMail" json:"addMail,omitempty"`
}

func (m *Msg_STORE) Reset()                    { *m = Msg_STORE{} }
func (m *Msg_STORE) String() string            { return proto.CompactTextString(m) }
func (*Msg_STORE) ProtoMessage()               {}
func (*Msg_STORE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *Msg_STORE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_STORE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_STORE) GetRmvMail() []*Msg_Element {
	if m != nil {
		return m.RmvMail
	}
	return nil
}

func (m *Msg_STORE) GetAddMail() *Msg_Element {
	if m != nil {
		return m.AddMail
	}
	return nil
}

type Msg_COPY struct {
	User     string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox  string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	AddMails []*Msg_Element `protobuf:"bytes,3,rep,name=addMails" json:"addMails,omitempty"`
}

func (m *Msg_COPY) Reset()                    { *m = Msg_COPY{} }
func (m *Msg_COPY) String() string            { return proto.CompactTextString(m) }
func (*Msg_COPY) ProtoMessage()               {}
func (*Msg_COPY) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

func (m *Msg_COPY) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_COPY) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_COPY) GetAddMails() []*Msg_Element {
	if m != nil {
		return m.AddMails
	}
	return nil
}

func init() {
	proto.RegisterType((*Msg)(nil), "comm.Msg")
	proto.RegisterType((*Msg_Element)(nil), "comm.Msg.Element")
	proto.RegisterType((*Msg_CREATE)(nil), "comm.Msg.CREATE")
	proto.RegisterType((*Msg_DELETE)(nil), "comm.Msg.DELETE")
	proto.RegisterType((*Msg_RENAME)(nil), "comm.Msg.RENAME")
	proto.RegisterType((*Msg_APPEND)(nil), "comm.Msg.APPEND")
	proto.RegisterType((*Msg_EXPUNGE)(nil), "comm.Msg.EXPUNGE")
	proto.RegisterType((*Msg_STORE)(nil), "comm.Msg.STORE")
	proto.RegisterType((*Msg_COPY)(nil), "comm.Msg.COPY")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Replica service

type ReplicaClient interface {
	Synchronization(ctx context.Context, opts ...grpc.CallOption) (Replica_SynchronizationClient, error)
}

type replicaClient struct {
	cc *grpc.ClientConn
}

func NewReplicaClient(cc *grpc.ClientConn) ReplicaClient {
	return &replicaClient{cc}
}

func (c *replicaClient) Synchronization(ctx context.Context, opts ...grpc.CallOption) (Replica_SynchronizationClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Replica_serviceDesc.Streams[0], c.cc, "/comm.Replica/Synchronization", opts...)
	if err != nil {
		return nil, err
	}
	x := &replicaSynchronizationClient{stream}
	return x, nil
}

type Replica_SynchronizationClient interface {
	Send(*Msg) error
	Recv() (*Msg, error)
	grpc.ClientStream
}

type replicaSynchronizationClient struct {
	grpc.ClientStream
}

func (x *replicaSynchronizationClient) Send(m *Msg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *replicaSynchronizationClient) Recv() (*Msg, error) {
	m := new(Msg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Replica service

type ReplicaServer interface {
	Synchronization(Replica_SynchronizationServer) error
}

func RegisterReplicaServer(s *grpc.Server, srv ReplicaServer) {
	s.RegisterService(&_Replica_serviceDesc, srv)
}

func _Replica_Synchronization_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReplicaServer).Synchronization(&replicaSynchronizationServer{stream})
}

type Replica_SynchronizationServer interface {
	Send(*Msg) error
	Recv() (*Msg, error)
	grpc.ServerStream
}

type replicaSynchronizationServer struct {
	grpc.ServerStream
}

func (x *replicaSynchronizationServer) Send(m *Msg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *replicaSynchronizationServer) Recv() (*Msg, error) {
	m := new(Msg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Replica_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comm.Replica",
	HandlerType: (*ReplicaServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Synchronization",
			Handler:       _Replica_Synchronization_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "replica.proto",
}

func init() { proto.RegisterFile("replica.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 528 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xc1, 0x6b, 0xdb, 0x3e,
	0x14, 0xc7, 0x7f, 0x8e, 0x1d, 0x3b, 0x79, 0xa1, 0xbf, 0x76, 0x62, 0x03, 0x61, 0x76, 0x08, 0x81,
	0x41, 0xa0, 0x34, 0x6c, 0xd9, 0xa5, 0xdb, 0x2d, 0xac, 0x62, 0x97, 0x25, 0x0d, 0x6a, 0x37, 0xb6,
	0xa3, 0xab, 0x88, 0x2c, 0xd4, 0x96, 0x8c, 0xac, 0x84, 0x66, 0xff, 0xc4, 0xfe, 0xb0, 0xfd, 0x4b,
	0x3b, 0x0c, 0xc9, 0x72, 0x6c, 0x32, 0x42, 0x97, 0x43, 0x6f, 0x7a, 0xfa, 0x7e, 0xfc, 0xbe, 0xd6,
	0x7b, 0xd2, 0x83, 0x13, 0xc5, 0xf3, 0x74, 0xc5, 0x92, 0x51, 0xae, 0xa4, 0x96, 0x28, 0x60, 0x32,
	0xcb, 0x06, 0xbf, 0x01, 0xfc, 0x69, 0xb1, 0x44, 0x18, 0x22, 0x27, 0x63, 0xaf, 0xef, 0x0d, 0xbb,
	0xb4, 0x0a, 0xd1, 0x05, 0x84, 0x1b, 0x96, 0x4a, 0x76, 0x8f, 0x5b, 0x7d, 0x7f, 0xd8, 0x1b, 0xbf,
	0x18, 0x99, 0x0f, 0x47, 0xd3, 0x62, 0x39, 0xfa, 0x62, 0xf7, 0x89, 0xd0, 0x6a, 0x4b, 0x1d, 0x84,
	0x5e, 0x42, 0x57, 0xe6, 0x5c, 0x25, 0x7a, 0x25, 0x05, 0xf6, 0x6d, 0xaa, 0x7a, 0x03, 0x0d, 0x21,
	0x64, 0x8a, 0x27, 0x9a, 0xe3, 0xa0, 0xef, 0x0d, 0x7b, 0xe3, 0xb3, 0x3a, 0xd9, 0x07, 0x4a, 0x26,
	0xb7, 0x84, 0x3a, 0xdd, 0x90, 0x0b, 0x9e, 0x72, 0xcd, 0x71, 0x7b, 0x9f, 0xbc, 0x22, 0x9f, 0x88,
	0x21, 0x4b, 0xdd, 0x90, 0x8a, 0x8b, 0x24, 0xe3, 0x38, 0xdc, 0x27, 0x29, 0x99, 0x4d, 0xa6, 0x84,
	0x3a, 0xdd, 0x90, 0x49, 0x9e, 0x73, 0xb1, 0xc0, 0xd1, 0x3e, 0x39, 0x99, 0xcf, 0xc9, 0xec, 0x8a,
	0x3a, 0x1d, 0x9d, 0x43, 0xc4, 0x1f, 0xf2, 0xb5, 0x58, 0x72, 0xdc, 0xb1, 0xe8, 0xb3, 0x1a, 0x25,
	0x5f, 0xe7, 0x9f, 0x67, 0x1f, 0x09, 0xad, 0x08, 0xf4, 0x0a, 0xda, 0x85, 0x96, 0x8a, 0xe3, 0xae,
	0x45, 0x4f, 0x6b, 0xf4, 0xe6, 0xf6, 0x9a, 0x12, 0x5a, 0xaa, 0x68, 0x00, 0x01, 0x93, 0xf9, 0x16,
	0x83, 0xa5, 0xfe, 0x6f, 0x9c, 0xfc, 0x7a, 0xfe, 0x8d, 0x5a, 0x2d, 0x9e, 0x42, 0x44, 0x52, 0x9e,
	0x71, 0xa1, 0xd1, 0x73, 0x68, 0x6f, 0x92, 0x74, 0xcd, 0x5d, 0x3f, 0xca, 0x00, 0x9d, 0x81, 0xaf,
	0x93, 0x25, 0x6e, 0xd9, 0x3d, 0xb3, 0x44, 0x31, 0x74, 0x98, 0x14, 0x9a, 0x0b, 0x5d, 0xb8, 0x7a,
	0xef, 0xe2, 0x78, 0x05, 0x61, 0x59, 0x56, 0x84, 0x20, 0x58, 0x17, 0x5c, 0xb9, 0x64, 0x76, 0x6d,
	0x7a, 0x9e, 0x25, 0xab, 0xf4, 0x4e, 0x3e, 0xb8, 0x7c, 0x55, 0x88, 0xde, 0x00, 0x24, 0x8b, 0xc5,
	0xd4, 0x89, 0xfe, 0x5f, 0x15, 0x28, 0x7f, 0x91, 0x36, 0x20, 0x63, 0x55, 0xf6, 0xe5, 0x78, 0x2b,
	0x95, 0x6d, 0x6a, 0x2b, 0xff, 0x80, 0x55, 0x0d, 0xc5, 0xbf, 0x3c, 0x08, 0xcb, 0xce, 0x3e, 0xb9,
	0xd7, 0x5e, 0x25, 0x82, 0x7f, 0xa8, 0x04, 0xba, 0x80, 0x8e, 0x8b, 0x0a, 0xdc, 0x3e, 0xe4, 0xb1,
	0x43, 0x62, 0x06, 0x61, 0x79, 0xf9, 0x8e, 0x3c, 0xcc, 0x39, 0x44, 0x2e, 0xc7, 0xe1, 0x06, 0x55,
	0x44, 0xbc, 0x80, 0xc8, 0x5d, 0xdb, 0xe3, 0x5d, 0x5c, 0x35, 0x0e, 0xd7, 0xab, 0x22, 0xe2, 0x9f,
	0x1e, 0xb4, 0xed, 0x95, 0x7f, 0x42, 0x93, 0xe6, 0xb9, 0x83, 0x47, 0xcf, 0xcd, 0x20, 0x30, 0xaf,
	0xeb, 0xc8, 0xff, 0x69, 0x76, 0xd0, 0x7f, 0xbc, 0x83, 0xef, 0xa0, 0xd7, 0x98, 0x84, 0xe6, 0x89,
	0xde, 0xf3, 0xad, 0xb3, 0x32, 0xcb, 0xfa, 0x29, 0x1b, 0x9f, 0x13, 0xf7, 0x94, 0xdf, 0xb7, 0x2e,
	0xbd, 0xf1, 0x25, 0x44, 0x74, 0x37, 0x67, 0x4f, 0x6f, 0xb6, 0x82, 0x7d, 0x57, 0x52, 0xac, 0x7e,
	0x94, 0xd3, 0xb2, 0xbb, 0x73, 0x8d, 0xeb, 0xe5, 0xe0, 0xbf, 0xa1, 0xf7, 0xda, 0xbb, 0x0b, 0xed,
	0x14, 0x7f, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0x31, 0x85, 0xd3, 0x00, 0xd6, 0x05, 0x00, 0x00,
}
