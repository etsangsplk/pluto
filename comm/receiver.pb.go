// Code generated by protoc-gen-go. DO NOT EDIT.
// source: receiver.proto

/*
Package comm is a generated protocol buffer package.

It is generated from these files:
	receiver.proto

It has these top-level messages:
	Msg
	Closed
*/
package comm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Msg struct {
	Replica   string            `protobuf:"bytes,1,opt,name=replica" json:"replica,omitempty"`
	Vclock    map[string]uint32 `protobuf:"bytes,2,rep,name=vclock" json:"vclock,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Operation string            `protobuf:"bytes,3,opt,name=operation" json:"operation,omitempty"`
	Create    *Msg_CREATE       `protobuf:"bytes,4,opt,name=create" json:"create,omitempty"`
	Delete    *Msg_DELETE       `protobuf:"bytes,5,opt,name=delete" json:"delete,omitempty"`
	Rename    *Msg_RENAME       `protobuf:"bytes,6,opt,name=rename" json:"rename,omitempty"`
	Append    *Msg_APPEND       `protobuf:"bytes,7,opt,name=append" json:"append,omitempty"`
	Expunge   *Msg_EXPUNGE      `protobuf:"bytes,8,opt,name=expunge" json:"expunge,omitempty"`
	Store     *Msg_STORE        `protobuf:"bytes,9,opt,name=store" json:"store,omitempty"`
	Copy      *Msg_COPY         `protobuf:"bytes,10,opt,name=copy" json:"copy,omitempty"`
}

func (m *Msg) Reset()                    { *m = Msg{} }
func (m *Msg) String() string            { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()               {}
func (*Msg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Msg) GetReplica() string {
	if m != nil {
		return m.Replica
	}
	return ""
}

func (m *Msg) GetVclock() map[string]uint32 {
	if m != nil {
		return m.Vclock
	}
	return nil
}

func (m *Msg) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *Msg) GetCreate() *Msg_CREATE {
	if m != nil {
		return m.Create
	}
	return nil
}

func (m *Msg) GetDelete() *Msg_DELETE {
	if m != nil {
		return m.Delete
	}
	return nil
}

func (m *Msg) GetRename() *Msg_RENAME {
	if m != nil {
		return m.Rename
	}
	return nil
}

func (m *Msg) GetAppend() *Msg_APPEND {
	if m != nil {
		return m.Append
	}
	return nil
}

func (m *Msg) GetExpunge() *Msg_EXPUNGE {
	if m != nil {
		return m.Expunge
	}
	return nil
}

func (m *Msg) GetStore() *Msg_STORE {
	if m != nil {
		return m.Store
	}
	return nil
}

func (m *Msg) GetCopy() *Msg_COPY {
	if m != nil {
		return m.Copy
	}
	return nil
}

type Msg_Element struct {
	Value    string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Tag      string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Contents string `protobuf:"bytes,3,opt,name=contents" json:"contents,omitempty"`
}

func (m *Msg_Element) Reset()                    { *m = Msg_Element{} }
func (m *Msg_Element) String() string            { return proto.CompactTextString(m) }
func (*Msg_Element) ProtoMessage()               {}
func (*Msg_Element) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *Msg_Element) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Msg_Element) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Msg_Element) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type Msg_CREATE struct {
	User       string       `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox    string       `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	AddMailbox *Msg_Element `protobuf:"bytes,3,opt,name=addMailbox" json:"addMailbox,omitempty"`
}

func (m *Msg_CREATE) Reset()                    { *m = Msg_CREATE{} }
func (m *Msg_CREATE) String() string            { return proto.CompactTextString(m) }
func (*Msg_CREATE) ProtoMessage()               {}
func (*Msg_CREATE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Msg_CREATE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_CREATE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_CREATE) GetAddMailbox() *Msg_Element {
	if m != nil {
		return m.AddMailbox
	}
	return nil
}

type Msg_DELETE struct {
	User       string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox    string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMailbox []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMailbox" json:"rmvMailbox,omitempty"`
}

func (m *Msg_DELETE) Reset()                    { *m = Msg_DELETE{} }
func (m *Msg_DELETE) String() string            { return proto.CompactTextString(m) }
func (*Msg_DELETE) ProtoMessage()               {}
func (*Msg_DELETE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Msg_DELETE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_DELETE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_DELETE) GetRmvMailbox() []*Msg_Element {
	if m != nil {
		return m.RmvMailbox
	}
	return nil
}

type Msg_RENAME struct {
	User       string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox    string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMailbox []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMailbox" json:"rmvMailbox,omitempty"`
	AddMailbox *Msg_Element   `protobuf:"bytes,4,opt,name=addMailbox" json:"addMailbox,omitempty"`
	AddMails   []*Msg_Element `protobuf:"bytes,5,rep,name=addMails" json:"addMails,omitempty"`
}

func (m *Msg_RENAME) Reset()                    { *m = Msg_RENAME{} }
func (m *Msg_RENAME) String() string            { return proto.CompactTextString(m) }
func (*Msg_RENAME) ProtoMessage()               {}
func (*Msg_RENAME) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

func (m *Msg_RENAME) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_RENAME) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_RENAME) GetRmvMailbox() []*Msg_Element {
	if m != nil {
		return m.RmvMailbox
	}
	return nil
}

func (m *Msg_RENAME) GetAddMailbox() *Msg_Element {
	if m != nil {
		return m.AddMailbox
	}
	return nil
}

func (m *Msg_RENAME) GetAddMails() []*Msg_Element {
	if m != nil {
		return m.AddMails
	}
	return nil
}

type Msg_APPEND struct {
	User    string       `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox string       `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	AddMail *Msg_Element `protobuf:"bytes,3,opt,name=addMail" json:"addMail,omitempty"`
}

func (m *Msg_APPEND) Reset()                    { *m = Msg_APPEND{} }
func (m *Msg_APPEND) String() string            { return proto.CompactTextString(m) }
func (*Msg_APPEND) ProtoMessage()               {}
func (*Msg_APPEND) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 4} }

func (m *Msg_APPEND) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_APPEND) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_APPEND) GetAddMail() *Msg_Element {
	if m != nil {
		return m.AddMail
	}
	return nil
}

type Msg_EXPUNGE struct {
	User    string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMail []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMail" json:"rmvMail,omitempty"`
}

func (m *Msg_EXPUNGE) Reset()                    { *m = Msg_EXPUNGE{} }
func (m *Msg_EXPUNGE) String() string            { return proto.CompactTextString(m) }
func (*Msg_EXPUNGE) ProtoMessage()               {}
func (*Msg_EXPUNGE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 5} }

func (m *Msg_EXPUNGE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_EXPUNGE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_EXPUNGE) GetRmvMail() []*Msg_Element {
	if m != nil {
		return m.RmvMail
	}
	return nil
}

type Msg_STORE struct {
	User    string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	RmvMail []*Msg_Element `protobuf:"bytes,3,rep,name=rmvMail" json:"rmvMail,omitempty"`
	AddMail *Msg_Element   `protobuf:"bytes,4,opt,name=addMail" json:"addMail,omitempty"`
}

func (m *Msg_STORE) Reset()                    { *m = Msg_STORE{} }
func (m *Msg_STORE) String() string            { return proto.CompactTextString(m) }
func (*Msg_STORE) ProtoMessage()               {}
func (*Msg_STORE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 6} }

func (m *Msg_STORE) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_STORE) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_STORE) GetRmvMail() []*Msg_Element {
	if m != nil {
		return m.RmvMail
	}
	return nil
}

func (m *Msg_STORE) GetAddMail() *Msg_Element {
	if m != nil {
		return m.AddMail
	}
	return nil
}

type Msg_COPY struct {
	User     string         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Mailbox  string         `protobuf:"bytes,2,opt,name=mailbox" json:"mailbox,omitempty"`
	AddMails []*Msg_Element `protobuf:"bytes,3,rep,name=addMails" json:"addMails,omitempty"`
}

func (m *Msg_COPY) Reset()                    { *m = Msg_COPY{} }
func (m *Msg_COPY) String() string            { return proto.CompactTextString(m) }
func (*Msg_COPY) ProtoMessage()               {}
func (*Msg_COPY) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 7} }

func (m *Msg_COPY) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Msg_COPY) GetMailbox() string {
	if m != nil {
		return m.Mailbox
	}
	return ""
}

func (m *Msg_COPY) GetAddMails() []*Msg_Element {
	if m != nil {
		return m.AddMails
	}
	return nil
}

type Closed struct {
	Status uint32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (m *Closed) Reset()                    { *m = Closed{} }
func (m *Closed) String() string            { return proto.CompactTextString(m) }
func (*Closed) ProtoMessage()               {}
func (*Closed) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Closed) GetStatus() uint32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*Msg)(nil), "comm.Msg")
	proto.RegisterType((*Msg_Element)(nil), "comm.Msg.Element")
	proto.RegisterType((*Msg_CREATE)(nil), "comm.Msg.CREATE")
	proto.RegisterType((*Msg_DELETE)(nil), "comm.Msg.DELETE")
	proto.RegisterType((*Msg_RENAME)(nil), "comm.Msg.RENAME")
	proto.RegisterType((*Msg_APPEND)(nil), "comm.Msg.APPEND")
	proto.RegisterType((*Msg_EXPUNGE)(nil), "comm.Msg.EXPUNGE")
	proto.RegisterType((*Msg_STORE)(nil), "comm.Msg.STORE")
	proto.RegisterType((*Msg_COPY)(nil), "comm.Msg.COPY")
	proto.RegisterType((*Closed)(nil), "comm.Closed")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Receiver service

type ReceiverClient interface {
	Incoming(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Closed, error)
}

type receiverClient struct {
	cc *grpc.ClientConn
}

func NewReceiverClient(cc *grpc.ClientConn) ReceiverClient {
	return &receiverClient{cc}
}

func (c *receiverClient) Incoming(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Closed, error) {
	out := new(Closed)
	err := grpc.Invoke(ctx, "/comm.Receiver/Incoming", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Receiver service

type ReceiverServer interface {
	Incoming(context.Context, *Msg) (*Closed, error)
}

func RegisterReceiverServer(s *grpc.Server, srv ReceiverServer) {
	s.RegisterService(&_Receiver_serviceDesc, srv)
}

func _Receiver_Incoming_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServer).Incoming(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comm.Receiver/Incoming",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServer).Incoming(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Receiver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comm.Receiver",
	HandlerType: (*ReceiverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Incoming",
			Handler:    _Receiver_Incoming_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "receiver.proto",
}

func init() { proto.RegisterFile("receiver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x51, 0x6b, 0xdb, 0x30,
	0x10, 0xc7, 0xe7, 0xda, 0xb1, 0x93, 0xcb, 0xda, 0x75, 0x62, 0x1b, 0xc2, 0xec, 0x21, 0x04, 0x0a,
	0x81, 0xd2, 0x40, 0xb3, 0x97, 0x6d, 0x6f, 0xa1, 0x15, 0x63, 0xb0, 0xa4, 0x41, 0xeb, 0xc6, 0xf6,
	0xe8, 0xda, 0x47, 0x30, 0xb5, 0x2d, 0x23, 0x2b, 0xa1, 0xf9, 0x14, 0xfb, 0x60, 0xfb, 0x4a, 0x7b,
	0x18, 0x92, 0x95, 0x38, 0x64, 0x84, 0x2e, 0x0f, 0x7d, 0xd3, 0xe9, 0x7e, 0xba, 0xbf, 0xee, 0x4e,
	0x27, 0x38, 0x91, 0x18, 0x63, 0xba, 0x44, 0x39, 0x2c, 0xa5, 0x50, 0x82, 0x78, 0xb1, 0xc8, 0xf3,
	0xfe, 0x1f, 0x00, 0x77, 0x52, 0xcd, 0x09, 0x85, 0x40, 0x62, 0x99, 0xa5, 0x71, 0x44, 0x9d, 0x9e,
	0x33, 0xe8, 0xf0, 0xb5, 0x49, 0x2e, 0xc0, 0x5f, 0xc6, 0x99, 0x88, 0xef, 0xe9, 0x51, 0xcf, 0x1d,
	0x74, 0x47, 0xaf, 0x87, 0xfa, 0xe0, 0x70, 0x52, 0xcd, 0x87, 0xdf, 0xcd, 0x3e, 0x2b, 0x94, 0x5c,
	0x71, 0x0b, 0x91, 0xb7, 0xd0, 0x11, 0x25, 0xca, 0x48, 0xa5, 0xa2, 0xa0, 0xae, 0x09, 0xd5, 0x6c,
	0x90, 0x01, 0xf8, 0xb1, 0xc4, 0x48, 0x21, 0xf5, 0x7a, 0xce, 0xa0, 0x3b, 0x3a, 0x6d, 0x82, 0x5d,
	0x71, 0x36, 0xbe, 0x65, 0xdc, 0xfa, 0x35, 0x99, 0x60, 0x86, 0x0a, 0x69, 0x6b, 0x97, 0xbc, 0x66,
	0x5f, 0x98, 0x26, 0x6b, 0xbf, 0x26, 0x25, 0x16, 0x51, 0x8e, 0xd4, 0xdf, 0x25, 0x39, 0x9b, 0x8e,
	0x27, 0x8c, 0x5b, 0xbf, 0x26, 0xa3, 0xb2, 0xc4, 0x22, 0xa1, 0xc1, 0x2e, 0x39, 0x9e, 0xcd, 0xd8,
	0xf4, 0x9a, 0x5b, 0x3f, 0x39, 0x87, 0x00, 0x1f, 0xca, 0x45, 0x31, 0x47, 0xda, 0x36, 0xe8, 0xcb,
	0x06, 0x65, 0x3f, 0x66, 0xdf, 0xa6, 0x9f, 0x18, 0x5f, 0x13, 0xe4, 0x0c, 0x5a, 0x95, 0x12, 0x12,
	0x69, 0xc7, 0xa0, 0x2f, 0x1a, 0xf4, 0xeb, 0xed, 0x0d, 0x67, 0xbc, 0xf6, 0x92, 0x3e, 0x78, 0xb1,
	0x28, 0x57, 0x14, 0x0c, 0x75, 0xb2, 0x95, 0xf9, 0xcd, 0xec, 0x27, 0x37, 0xbe, 0x70, 0x02, 0x01,
	0xcb, 0x30, 0xc7, 0x42, 0x91, 0x57, 0xd0, 0x5a, 0x46, 0xd9, 0x02, 0x6d, 0x3f, 0x6a, 0x83, 0x9c,
	0x82, 0xab, 0xa2, 0x39, 0x3d, 0x32, 0x7b, 0x7a, 0x49, 0x42, 0x68, 0xc7, 0xa2, 0x50, 0x58, 0xa8,
	0xca, 0xd6, 0x7b, 0x63, 0x87, 0x29, 0xf8, 0x75, 0x59, 0x09, 0x01, 0x6f, 0x51, 0xa1, 0xb4, 0xc1,
	0xcc, 0x5a, 0xf7, 0x3c, 0x8f, 0xd2, 0xec, 0x4e, 0x3c, 0xd8, 0x78, 0x6b, 0x93, 0x5c, 0x02, 0x44,
	0x49, 0x32, 0xb1, 0x4e, 0xf7, 0x9f, 0x0a, 0xd4, 0x57, 0xe4, 0x5b, 0x90, 0x96, 0xaa, 0xfb, 0x72,
	0xb8, 0x94, 0xcc, 0x97, 0x8d, 0x94, 0xbb, 0x47, 0xaa, 0x81, 0xc2, 0xdf, 0x0e, 0xf8, 0x75, 0x67,
	0x9f, 0x5c, 0x6b, 0xa7, 0x12, 0xde, 0x7f, 0x54, 0x82, 0x5c, 0x40, 0xdb, 0x5a, 0x15, 0x6d, 0xed,
	0xd3, 0xd8, 0x20, 0x61, 0x0c, 0x7e, 0xfd, 0xf8, 0x0e, 0x4c, 0xe6, 0x1c, 0x02, 0x1b, 0x63, 0x7f,
	0x83, 0xd6, 0x44, 0x98, 0x40, 0x60, 0x9f, 0xed, 0xe1, 0x2a, 0xb6, 0x1a, 0xfb, 0xeb, 0xb5, 0x26,
	0xc2, 0x5f, 0x0e, 0xb4, 0xcc, 0x93, 0x7f, 0x42, 0x91, 0xed, 0xbc, 0xbd, 0x47, 0xf3, 0x8e, 0xc1,
	0xd3, 0xd3, 0x75, 0xe0, 0x7d, 0xb6, 0x3b, 0xe8, 0x3e, 0xde, 0xc1, 0x0f, 0xd0, 0xdd, 0xfa, 0x09,
	0xf5, 0x88, 0xde, 0xe3, 0xca, 0x4a, 0xe9, 0x65, 0x33, 0xca, 0x5a, 0xe7, 0xd8, 0x8e, 0xf2, 0xc7,
	0xa3, 0xf7, 0x4e, 0xbf, 0x07, 0xfe, 0x55, 0x26, 0x2a, 0x4c, 0xc8, 0x1b, 0xf0, 0x2b, 0x15, 0xa9,
	0x45, 0x65, 0x0e, 0x1e, 0x73, 0x6b, 0x8d, 0x2e, 0xa1, 0xcd, 0xed, 0xc7, 0x4d, 0xce, 0xa0, 0xfd,
	0xb9, 0x88, 0x45, 0x9e, 0x16, 0x73, 0xd2, 0xd9, 0xdc, 0x28, 0x7c, 0x5e, 0x2f, 0xeb, 0x40, 0xfd,
	0x67, 0x77, 0xbe, 0xf9, 0xe0, 0xdf, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xca, 0xae, 0x5f, 0x91,
	0xf2, 0x05, 0x00, 0x00,
}
